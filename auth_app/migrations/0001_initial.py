# Generated by Django 3.2.12 on 2022-06-09 11:17

from django.conf import settings
import django.contrib.postgres.fields.citext
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django.contrib.postgres.fields.citext.CITextField()),
                ('organization_type', django.contrib.postgres.fields.citext.CICharField(choices=[('R', 'Ведущая компания группы'), ('T', 'Юридическое лицо со своим премиальным фондом'), ('С', 'Юридическое лицо'), ('D', 'Подразделение'), ('М', 'Маркетплейс')], max_length=1, verbose_name='Вид контакта')),
                ('parent_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='auth_app.organization', verbose_name='Входит в')),
                ('top_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pride', to='auth_app.organization', verbose_name='Юр.лицо')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='С')),
                ('end_date', models.DateField(verbose_name='По')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_class', models.CharField(choices=[('T', 'Благодарность'), ('X', 'За стаж работы'), ('D', 'Для распределения'), ('R', 'Для перераспределения'), ('B', 'Сгорание'), ('O', 'Для расчета премии'), ('P', 'Покупка'), ('E', 'Эмитирование'), ('С', 'Погашение')], max_length=1, verbose_name='Вид транзакции')),
                ('amount', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Количество')),
                ('created_at', models.DateTimeField(verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(null=True, verbose_name='Время обновления состояния')),
                ('status', models.CharField(choices=[('W', 'Ожидает подтверждения'), ('A', 'Одобрено'), ('D', 'Отклонено')], max_length=1, verbose_name='Состояние транзакции')),
                ('reason', django.contrib.postgres.fields.citext.CITextField(verbose_name='Обоснование')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
        ),
        migrations.CreateModel(
            name='UserStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Премия')),
                ('income_at_start', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Остаток на начало периода')),
                ('income_at_end', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Остаток на конец периода')),
                ('income_exp', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Получено за стаж работы')),
                ('income_thanks', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Получено в качестве благодарности')),
                ('income_used_for_bonus', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Использовано для распределения премий')),
                ('income_used_for_thanks', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Использовано своих для благодарности')),
                ('income_declined', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Сгоревшие (отклоненные транзакции из своих)')),
                ('distr_initial', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Получено для распределения')),
                ('distr_redist', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Получено для распределения')),
                ('distr_burnt', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Сгоревшие как неиспользованные')),
                ('distr_thanks', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Использовано распределяемых')),
                ('distr_declined', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Сгоревшие (отклоненные транзакции из распределяемых)')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='auth_app.period', verbose_name='Период')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('A', 'Администратор'), ('С', 'Контролер'), ('M', 'Распорядитель')], max_length=1, verbose_name='Роль')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='privileged', to='auth_app.organization', verbose_name='Подразделение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privileged', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(verbose_name='Время создания')),
                ('status', models.CharField(choices=[('W', 'Ожидает подтверждения'), ('A', 'Одобрено'), ('D', 'Отклонено')], max_length=1, verbose_name='Состояние транзакции')),
                ('reason', django.contrib.postgres.fields.citext.CITextField(null=True, verbose_name='Обоснование (отклонения)')),
                ('controller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revised', to=settings.AUTH_USER_MODEL, verbose_name='Контролер')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='auth_app.transaction', verbose_name='Транзакция')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', django.contrib.postgres.fields.citext.CICharField(max_length=20, verbose_name='Идентификатор пользователя Telegram')),
                ('tg_name', django.contrib.postgres.fields.citext.CICharField(blank=True, max_length=20, null=True, verbose_name='Имя пользователя Telegram')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users_photo/', verbose_name='Фотография')),
                ('hired_at', models.DateField(blank=True, null=True, verbose_name='Работает с')),
                ('surname', django.contrib.postgres.fields.citext.CITextField(blank=True, default='', verbose_name='Фамилия')),
                ('first_name', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Имя')),
                ('middle_name', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Отчество')),
                ('nickname', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Псевдоним')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiledepartment', to='auth_app.organization', verbose_name='Подразделение')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profileorganization', to='auth_app.organization', verbose_name='Юр.лицо')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('@', 'Email'), ('T', 'Telegram'), ('P', 'Телефон')], max_length=1, verbose_name='Вид контакта')),
                ('contact_id', django.contrib.postgres.fields.citext.CITextField(verbose_name='Адрес или номер')),
                ('confirmed', models.BooleanField(verbose_name='Подтверждено')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='auth_app.profile', verbose_name='Контакты')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('I', 'Заработанные'), ('D', 'Для раздачи'), ('S', 'Системный'), ('B', 'Сгоревшие'), ('O', 'Для расчета премий'), ('P', 'Покупки'), ('T', 'Эмитент')], max_length=1, verbose_name='Тип счета')),
                ('amount', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Количество')),
                ('frozen', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Ожидает подтверждения')),
                ('updated_at', models.DateTimeField(verbose_name='Время обновления')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='auth_app.organization', verbose_name='Подразделение')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth_app.transaction')),
            ],
        ),
    ]
